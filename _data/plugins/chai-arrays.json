{"_id":"chai-arrays","_rev":"1-2d8d18b917c967bbd561f96ce3bd793c","name":"chai-arrays","description":"a simple chai plugin for better array assertions","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"chai-arrays","version":"0.0.1","description":"a simple chai plugin for better array assertions","main":"assertArrays.js","scripts":{"test":"eslint assertArrays.js test && ./node_modules/mocha/bin/mocha"},"repository":{"type":"git","url":"git+https://github.com/GaneshSPatil/chai-arrays.git"},"keywords":["chai","chai-plugin","testing","assert","expect","Array"],"author":{"name":"Ganesh Patil"},"license":"ISC","bugs":{"url":"https://github.com/GaneshSPatil/chai-arrays/issues"},"homepage":"https://github.com/GaneshSPatil/chai-arrays#readme","engines":{"node":">=0.10"},"devDependencies":{"chai":"^3.5.0","eslint":"^3.10.2","mocha":"^3.1.2"},"gitHead":"8d41397a452676ff52fd24fd60be4685a37d083f","_id":"chai-arrays@0.0.1","_shasum":"273aa032f5bcfe0e7d99ef230cc6020214d3e008","_from":".","_npmVersion":"3.10.8","_nodeVersion":"7.0.0","_npmUser":{"name":"ganeshpl","email":"ganeshpl@thoughtworks.com"},"dist":{"shasum":"273aa032f5bcfe0e7d99ef230cc6020214d3e008","tarball":"https://registry.npmjs.org/chai-arrays/-/chai-arrays-0.0.1.tgz"},"maintainers":[{"name":"ganeshpl","email":"ganeshpl@thoughtworks.com"}],"_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/chai-arrays-0.0.1.tgz_1479539168423_0.9621755173429847"},"directories":{}}},"readme":"# chai-arrays\na simple chai plugin for better array assertions\n\n---\n\n## Installation\n```\nnpm install chai-arrays\n```\n\n---\n\n## Usage\n\n### plug-in\n\n```\nconst chai = require('chai');\nconst assertArrays = require('chai-arrays');\nchai.use(assertArrays);\n```\n\n### array\n\nAsserts that the type of `actual` is `Array`.\n\n```\nexpect([1, 2, 3]).to.be.array();\nexpect('foobar').not.to.be.array();\n```\n\n### ofSize\n\nAsserts that the size of `actual` is equal to `expected`.\n\n```\nexpect([1, 2, 3]).to.be.ofSize(3);\nexpect([1, 2, 3]).not.to.be.ofSize(5);\n```\n\n### equalTo\n\nAsserts that the `actual` is equal to `expected`.\n\n```\nexpect([1, 2, 3]).to.be.equalTo([1, 2, 3]);\nexpect([1, 2, 3]).not.to.be.equalTo([1, 2, 5]);\n```\n\n### containing\n\nAsserts that the `actual` is containing the `expected` element.\n\n```\nexpect([1, 2, 3]).to.be.containing(1);\nexpect([1, 2, 3]).not.to.be.containing(5);\n```\n\n### containingAllOf\n\nAsserts that the `actual` is containing all of the `expected` elements.\n\n```\nexpect([1, 2, 3]).to.be.containingAllOf([1]);\nexpect([1, 2, 3]).to.be.containingAllOf([1, 3]);\nexpect([1, 2, 3]).to.be.containingAllOf([1, 2, 3]);\n```\n\n### containingAnyOf\n\nAsserts that the `actual` is containing any of the `expected` elements.\n\n```\nexpect([1, 2, 3]).to.be.containingAnyOf([1]);\nexpect([1, 2, 3]).to.be.containingAnyOf([6, 7, 3, 5]);\nexpect([1, 2, 3]).to.be.containingAnyOf([1, 2, 3]);\n```\n\n### sorted\n\nAsserts that the `actual` array is sorted.\n\n```\nexpect([1, 2, 3]).to.be.sorted();\nexpect([1, 2, 4, 3]).not.to.be.sorted();\n\nexpect([3, 2, 1]).to.be.sorted((prev, next) => prev < next); // sorting based on the provided function\n```\n","maintainers":[{"name":"ganeshpl","email":"ganeshpl@thoughtworks.com"}],"time":{"modified":"2016-11-19T07:06:10.443Z","created":"2016-11-19T07:06:10.443Z","0.0.1":"2016-11-19T07:06:10.443Z"},"homepage":"https://github.com/GaneshSPatil/chai-arrays#readme","keywords":["chai","chai-plugin","testing","assert","expect","Array"],"repository":{"type":"git","url":"git+https://github.com/GaneshSPatil/chai-arrays.git"},"author":{"name":"Ganesh Patil"},"bugs":{"url":"https://github.com/GaneshSPatil/chai-arrays/issues"},"license":"ISC","readmeFilename":"README.md","_attachments":{}}